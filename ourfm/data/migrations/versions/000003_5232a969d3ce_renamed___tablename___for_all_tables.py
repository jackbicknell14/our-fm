"""Renamed __tablename__ for all tables

Revision ID: 5232a969d3ce
Revises: 3523ac1dd6c5
Create Date: 2021-01-10 11:16:17.490980

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5232a969d3ce'
down_revision = '3523ac1dd6c5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artist_tracks',
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('artist_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('track_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_artist_tracks_artist_id'), 'artist_tracks', ['artist_id'], unique=False)
    op.create_index(op.f('ix_artist_tracks_track_id'), 'artist_tracks', ['track_id'], unique=False)
    op.create_table('user_tracks',
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('track_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('device', sa.String(), nullable=True),
    sa.Column('shuffle_state', sa.String(), nullable=True),
    sa.Column('repeat_state', sa.String(), nullable=True),
    sa.Column('timestamp', sa.String(), nullable=True),
    sa.Column('context', sa.String(), nullable=True),
    sa.Column('progress_ms', sa.String(), nullable=True),
    sa.Column('item', sa.String(), nullable=True),
    sa.Column('currently_playing_type', sa.String(), nullable=True),
    sa.Column('actions', sa.String(), nullable=True),
    sa.Column('is_playing', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_tracks_track_id'), 'user_tracks', ['track_id'], unique=False)
    op.create_index(op.f('ix_user_tracks_user_id'), 'user_tracks', ['user_id'], unique=False)
    op.create_table('playlist_tracks',
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('track_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('playlist_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('added_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.id'], ),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_playlist_tracks_playlist_id'), 'playlist_tracks', ['playlist_id'], unique=False)
    op.create_index(op.f('ix_playlist_tracks_track_id'), 'playlist_tracks', ['track_id'], unique=False)
    op.drop_index('ix_playlisttracks_playlist_id', table_name='playlisttracks')
    op.drop_index('ix_playlisttracks_track_id', table_name='playlisttracks')
    op.drop_table('playlisttracks')
    op.drop_index('ix_artisttracks_artist_id', table_name='artisttracks')
    op.drop_index('ix_artisttracks_track_id', table_name='artisttracks')
    op.drop_table('artisttracks')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artisttracks',
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('artist_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('track_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], name='artisttracks_artist_id_fkey'),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], name='artisttracks_track_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='artisttracks_pkey')
    )
    op.create_index('ix_artisttracks_track_id', 'artisttracks', ['track_id'], unique=False)
    op.create_index('ix_artisttracks_artist_id', 'artisttracks', ['artist_id'], unique=False)
    op.create_table('playlisttracks',
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('track_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('playlist_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('added_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.id'], name='playlisttracks_playlist_id_fkey'),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], name='playlisttracks_track_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='playlisttracks_pkey')
    )
    op.create_index('ix_playlisttracks_track_id', 'playlisttracks', ['track_id'], unique=False)
    op.create_index('ix_playlisttracks_playlist_id', 'playlisttracks', ['playlist_id'], unique=False)
    op.drop_index(op.f('ix_playlist_tracks_track_id'), table_name='playlist_tracks')
    op.drop_index(op.f('ix_playlist_tracks_playlist_id'), table_name='playlist_tracks')
    op.drop_table('playlist_tracks')
    op.drop_index(op.f('ix_user_tracks_user_id'), table_name='user_tracks')
    op.drop_index(op.f('ix_user_tracks_track_id'), table_name='user_tracks')
    op.drop_table('user_tracks')
    op.drop_index(op.f('ix_artist_tracks_track_id'), table_name='artist_tracks')
    op.drop_index(op.f('ix_artist_tracks_artist_id'), table_name='artist_tracks')
    op.drop_table('artist_tracks')
    # ### end Alembic commands ###
